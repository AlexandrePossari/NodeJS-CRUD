{
    "openapi": "3.0.0",
    "info":{
        "title": "NodeJS Rest API",
        "description": "Learning Node",
        "contact": {
            "email": "ac.possari@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths":{
        "/feed/book":{
            "post": {
                "summary": "Book registration",
                "description": "Route responsible for registering the books",
                "tags": ["Books"],
                "security": [{"bearerAuth": []}],
                "requestBody": {
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Book"
                            },
                            "examples": {
                                "book": {
                                    "value":{
                                        "name": "The Little Prince",
                                        "author": "Antoine de Saint-Exup√©ry"
                                    }
                                }
                            }
                        }
                        
                    }
                },
                "responses": {
                    "422":{
                        "description": "Validation failed, data entered is incorrect"
                    },
                    "201":{
                        "description": "Book created!",
                        "content": {                        
                            "application/json":{
                                "$ref": "#/components/schemas/Book"
                            }   
                        }                         
                    },
                    "500":{
                        "description": "Internal server error"
                    }
                }                
            }
        },
        "/feed/book/{bookId}": {
            "get": {
                "summary": "Get book by id",
                "description": "Route to get a single book by id",
                "tags": ["Books"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                      "name": "bookId",
                      "in": "path",
                      "description": "ID of book to return",
                      "required": true
                    }
                  ],
                "responses": {
                    "404":{
                        "description": "Could not find book"
                    },
                    "200":{
                        "description": "Book fetched",
                        "content": {                        
                            "application/json":{
                                "$ref": "#/components/schemas/Book"
                            }   
                        }                         
                    },
                    "500":{
                        "description": "Internal server error"
                    }
                }                
            },
            "put": {
                "summary": "Update book by id",
                "description": "Route to update a single book by id",
                "tags": ["Books"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                      "name": "bookId",
                      "in": "path",
                      "description": "ID of book to be updated",
                      "required": true
                    }
                  ],
                  "requestBody": {
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Book"
                            },
                            "examples": {
                                "book": {
                                    "value":{
                                        "name": "The Witcher",
                                        "author": "Andrzej Sapkowski"
                                    }
                                }
                            }
                        }
                        
                    }
                },  
                "responses": {
                    "404":{
                        "description": "Could not find book"
                    },
                    "403":{
                        "description": "Not authorized, because you are not the user who created it"
                    },
                    "200":{
                        "description": "Book updated",
                        "content": {                        
                            "application/json":{
                                "$ref": "#/components/schemas/Book"
                            }   
                        }                         
                    },
                    "500":{
                        "description": "Internal server error"
                    }
                }                
            },
            "delete": {
                "summary": "Delete book by id",
                "description": "Route to delete a single book by id",
                "tags": ["Books"],
                "security": [{"bearerAuth": []}],
                "parameters": [
                    {
                      "name": "bookId",
                      "in": "path",
                      "description": "ID of book to delete",
                      "required": true
                    }
                  ],
                "responses": {
                    "404":{
                        "description": "Could not find book"
                    },
                    "403":{
                        "description": "Not authorized, because you are not the user who created it"
                    },
                    "200":{
                        "description": "Deleted book"                       
                    },
                    "500":{
                        "description": "Internal server error"
                    }
                }                
            }
        },
        "/auth/signup":{
            "put": {
                "summary": "Register a user",
                "description": "Create a user",
                "tags": ["User"],               
                "requestBody": {
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref": "#/components/schemas/User"
                        },
                        "examples": {
                            "user": {
                                "value":{
                                    "email": "ac.possari@ges.inatel.br",
                                    "name": "Alexandre Possari",
                                    "password": "testpassword123"
                                }
                            }
                        }
                    }
                }
                },  
                "responses": {
                    "422":{
                        "description": "Validation failed" 
                    },
                    "201":{
                        "description": "User created",
                        "schema": {
                            "type": "object",
                            "userId": {
                              "type": "integer"
                            }
                        }                        
                    },
                    "500":{
                        "description": "Internal server error"
                    }
                }                
            }
        },
        "/auth/login":{
            "post": {
                "summary": "Login with a user",
                "description": "Login with a user and get jwt token",
                "tags": ["User"],               
                "requestBody": {
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref": "#/components/schemas/User"
                        },
                        "examples": {
                            "user": {
                                "value":{
                                    "email": "ac.possari@ges.inatel.br",
                                    "password": "testpassword123"
                                }
                            }
                        }
                    }
                }
                },  
                "responses": {
                    "401":{
                        "description": "A user with this email could not be found/Wrong password" 
                    },
                    "200":{
                        "description": "User logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "userId": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }                      
                    },
                    "500":{
                        "description": "Internal server error"
                    }
                }                
            }
        }
    },
    "components": {
        "schemas":{
            "Book":{
                "type": "object",
                "properties": {
                    "id":{
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "creator":{
                        "$ref": "#/components/schemas/User"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id":{
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "books": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Book"
                        }
                    }
                }
            }
        },
        "securitySchemes":{
            "bearerAuth":{
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}